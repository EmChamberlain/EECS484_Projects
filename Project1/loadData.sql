--USERS
INSERT INTO USERS (USER_ID, FIRST_NAME, LAST_NAME, YEAR_OF_BIRTH, MONTH_OF_BIRTH, DAY_OF_BIRTH, GENDER)
SELECT DISTINCT USER_ID, FIRST_NAME, LAST_NAME, YEAR_OF_BIRTH, MONTH_OF_BIRTH, DAY_OF_BIRTH, GENDER FROM jsoren.PUBLIC_USER_INFORMATION
WHERE USER_ID IN (SELECT DISTINCT USER_ID FROM jsoren.PUBLIC_USER_INFORMATION);

--CITIES


--USER_CURRENT_CITIES 
INSERT INTO CITIES (CITY_NAME, STATE_NAME, COUNTRY_NAME)
SELECT DISTINCT CURRENT_CITY, CURRENT_STATE, CURRENT_COUNTRY FROM jsoren.PUBLIC_USER_INFORMATION;

INSERT INTO USER_CURRENT_CITIES (USER_ID, CURRENT_CITY_ID)
SELECT DISTINCT jsoren.PUBLIC_USER_INFORMATION.USER_ID, CITIES.CITY_ID FROM jsoren.PUBLIC_USER_INFORMATION
INNER JOIN CITIES ON jsoren.PUBLIC_USER_INFORMATION.CURRENT_CITY=CITIES.CITY_NAME
AND jsoren.PUBLIC_USER_INFORMATION.CURRENT_STATE=CITIES.STATE_NAME
AND jsoren.PUBLIC_USER_INFORMATION.CURRENT_COUNTRY=CITIES.COUNTRY_NAME;


--USER_HOMETOWN_CITIES
INSERT INTO CITIES (CITY_NAME, STATE_NAME, COUNTRY_NAME)
SELECT DISTINCT HOMETOWN_CITY, HOMETOWN_STATE, HOMETOWN_COUNTRY FROM jsoren.PUBLIC_USER_INFORMATION
WHERE NOT EXISTS (SELECT * FROM CITIES WHERE CITIES.CITY_NAME=jsoren.PUBLIC_USER_INFORMATION.HOMETOWN_CITY
AND CITIES.STATE_NAME=jsoren.PUBLIC_USER_INFORMATION.HOMETOWN_STATE
AND CITIES.COUNTRY_NAME=jsoren.PUBLIC_USER_INFORMATION.HOMETOWN_COUNTRY
);

INSERT INTO USER_HOMETOWN_CITIES (USER_ID, HOMETOWN_CITY_ID)
SELECT DISTINCT jsoren.PUBLIC_USER_INFORMATION.USER_ID, CITIES.CITY_ID FROM jsoren.PUBLIC_USER_INFORMATION
INNER JOIN CITIES ON jsoren.PUBLIC_USER_INFORMATION.HOMETOWN_CITY=CITIES.CITY_NAME
AND jsoren.PUBLIC_USER_INFORMATION.HOMETOWN_STATE=CITIES.STATE_NAME
AND jsoren.PUBLIC_USER_INFORMATION.HOMETOWN_COUNTRY=CITIES.COUNTRY_NAME;

--PROGRAMS


INSERT INTO PROGRAMS (INSTITUTION, CONCENTRATION, DEGREE)
SELECT DISTINCT INSTITUTION_NAME, PROGRAM_CONCENTRATION, PROGRAM_DEGREE FROM jsoren.PUBLIC_USER_INFORMATION
WHERE INSTITUTION_NAME IS NOT NULL;

--EDUCATION
INSERT INTO EDUCATION (USER_ID, PROGRAM_ID, PROGRAM_YEAR)
SELECT DISTINCT jsoren.PUBLIC_USER_INFORMATION.USER_ID, PROGRAMS.PROGRAM_ID, jsoren.PUBLIC_USER_INFORMATION.PROGRAM_YEAR
FROM jsoren.PUBLIC_USER_INFORMATION
INNER JOIN PROGRAMS ON jsoren.PUBLIC_USER_INFORMATION.INSTITUTION_NAME=PROGRAMS.INSTITUTION
AND jsoren.PUBLIC_USER_INFORMATION.PROGRAM_CONCENTRATION=PROGRAMS.CONCENTRATION
AND jsoren.PUBLIC_USER_INFORMATION.PROGRAM_DEGREE=PROGRAMS.DEGREE;


--FRIENDS
INSERT INTO FRIENDS (USER1_ID, USER2_ID)
SELECT DISTINCT USER1_ID, USER2_ID FROM
(SELECT DISTINCT USER1_ID, USER2_ID FROM jsoren.PUBLIC_ARE_FRIENDS
UNION
SELECT DISTINCT USER2_ID, USER2_ID FROM jsoren.PUBLIC_ARE_FRIENDS)
WHERE USER1_ID < USER2_ID;
